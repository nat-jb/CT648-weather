services:
  react-front-app:
    build:
      context: ./react-front-app  # ที่อยู่โฟลเดอร์ที่เก็บ Dockerfile ของ frontend
    ports:
      - "5173:5173"  # ใช้พอร์ต 5173 สำหรับ frontend
    networks:
      - internal-network

  flask-api-service:
    build:
      context: ./flask-api-service  # ที่อยู่โฟลเดอร์ที่เก็บ Dockerfile ของ backend
    ports:
      - "5002:5002"  # ใช้พอร์ต 5002 สำหรับ backend
    environment:
      - DATABASE_URL=postgresql://postgresql:12345678@db:5432/66130520  # URL สำหรับเชื่อมต่อ PostgreSQL
    networks:
      - internal-network  

  config-service:  # เพิ่ม Node.js server
    build:
      context: ./config-service  # ที่อยู่โฟลเดอร์ที่เก็บ Dockerfile ของ Node.js server
    #ports:
    #  - "5001:5001"  # ใช้พอร์ต 5001 สำหรับ Node.js server
    networks:
      - internal-network

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: 66130520
      POSTGRES_USER: postgresql
      POSTGRES_PASSWORD: 12345678
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./flask-api-service/init.sql:/docker-entrypoint-initdb.d/init.sql  # รัน init.sql เมื่อ container เริ่มต้น
    networks:
      - internal-network

volumes:
  db_data:

networks:
  internal-network:
    driver: bridge